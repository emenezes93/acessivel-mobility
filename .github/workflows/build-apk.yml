name: Build Android APK

on:
  workflow_dispatch: # Manual trigger
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release

jobs:
  build-apk:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Install dependencies
        run: npm ci
        
      - name: Build web application
        run: npm run build
        
      - name: Sync Capacitor with Android
        run: npx cap sync android
        
      - name: Make gradlew executable
        run: chmod +x android/gradlew
        
      - name: Build Debug APK
        if: ${{ github.event.inputs.build_type == 'debug' }}
        run: |
          cd android
          ./gradlew assembleDebug
          
      - name: Build Release APK
        if: ${{ github.event.inputs.build_type == 'release' }}
        run: |
          cd android
          ./gradlew assembleRelease
          
      - name: Get APK path
        id: apk_path
        run: |
          if [ "${{ github.event.inputs.build_type }}" == "debug" ]; then
            echo "path=android/app/build/outputs/apk/debug/app-debug.apk" >> $GITHUB_OUTPUT
            echo "name=acessivel-mobility-debug.apk" >> $GITHUB_OUTPUT
          else
            echo "path=android/app/build/outputs/apk/release/app-release-unsigned.apk" >> $GITHUB_OUTPUT
            echo "name=acessivel-mobility-release.apk" >> $GITHUB_OUTPUT
          fi
          
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.apk_path.outputs.name }}
          path: ${{ steps.apk_path.outputs.path }}
          retention-days: 30
          
      - name: Get APK info
        run: |
          APK_PATH="${{ steps.apk_path.outputs.path }}"
          APK_SIZE=$(du -h "$APK_PATH" | cut -f1)
          echo "### 📱 APK Build Successful! 🎉" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Build Type:** ${{ github.event.inputs.build_type }}" >> $GITHUB_STEP_SUMMARY
          echo "**APK Size:** $APK_SIZE" >> $GITHUB_STEP_SUMMARY
          echo "**File Name:** ${{ steps.apk_path.outputs.name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📥 Download Instructions:" >> $GITHUB_STEP_SUMMARY
          echo "1. Go to the **Actions** tab" >> $GITHUB_STEP_SUMMARY
          echo "2. Click on this workflow run" >> $GITHUB_STEP_SUMMARY
          echo "3. Download the APK from **Artifacts** section" >> $GITHUB_STEP_SUMMARY
          echo "4. Transfer to your Android device and install" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📱 App Features:" >> $GITHUB_STEP_SUMMARY
          echo "- ♿ Complete accessibility support" >> $GITHUB_STEP_SUMMARY
          echo "- 🎙️ Portuguese voice interface" >> $GITHUB_STEP_SUMMARY
          echo "- 📱 Haptic feedback" >> $GITHUB_STEP_SUMMARY
          echo "- 🌓 Dark/Light mode" >> $GITHUB_STEP_SUMMARY
          echo "- 🚗 Ride sharing system" >> $GITHUB_STEP_SUMMARY
          echo "- 📍 Real-time location" >> $GITHUB_STEP_SUMMARY